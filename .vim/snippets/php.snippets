snippet <?
	<?php

snippet php
	<?php
	${1}
	?>

snippet ec
	echo ${1};
snippet <?e
	<?php echo ${1} ?>
# this one is for php5.4
snippet <?=
	<?=${1}?>
snippet ns
	namespace ${1:Foo\Bar\Baz};
	${2}
snippet use
	use ${1:Foo\Bar\Baz};
	${2}
snippet	cl
	${1:abstract }class ${2:`Filename()`}
	{
		${3}
	}
snippet i
	interface ${1:`Filename()`}
	{
		${2}
	}
snippet t.
	$this->${1}

snippet f
	/* ${1}
	*****************************************************************************/
	function ${2}(${3}) {
		${4}
	}

snippet function
	/* ${1}
	*****************************************************************************/
	function ${2}(${3}) {
		${4}
	}

#wordpress
snippet gpm
	echo get_post_meta( get_the_ID(), '${1}', true );

snippet get_image
	echo wp_get_attachment_image( get_field( '${1}' ), 'full', null, array( 'alt' => ${2:get_the_title()}, 'title' => ${3:get_the_title()} ) );

snippet php_get_image
	<?php echo wp_get_attachment_image( get_field( '${1}' ), 'full', null, array( 'alt' => ${2:get_the_title()}, 'title' => ${3:get_the_title()} ) ); ?>

snippet get_field
	get_field( '${1}', ${2:get_the_ID()} );

snippet gf
	get_field( '${1}', ${2:get_the_ID()} );

snippet php_get_field
	<?php echo get_field( '${1}', ${2:get_the_ID()} ); ?>

snippet get_option
	get_field( '${1}', 'option' );

snippet new_query
	$${1}_query = new WP_QUERY ( 
		array(
			'post_type' => 'post',
			'post_status' => 'publish',
			'posts_per_page' => ${2},
			${3}
		)   
	);

snippet wp
	/* LOAD WORDPRESS
	 ********************************************************************************/
	$parse_uri = explode( 'wp-content', __FILE__ );
	$public_html = $parse_uri[0];
	include_once( $public_html . 'wp-load.php' );

	${1}

snippet stdout
	$stdout = fopen( 'php://stdout', 'w' );
		${1}
	fclose( $stdout );

snippet get_template
	/* ${1} 
	*****************************************************************************/
	get_template_part( 'template-parts/${2}' );

snippet gt
	/* ${1} 
	*****************************************************************************/
	get_template_part( 'template-parts/${2}' );

snippet locate_template
	/* ${1} 
	*****************************************************************************/
	include( locate_template( 'template-parts/${2}/${3}.php' ) );

snippet lt
	/* ${1} 
	*****************************************************************************/
	include( locate_template( 'template-parts/${2}/${3}.php' ) );
	
snippet setup_query
	$defaults = array( 
		'post_type' => '${2}',
		'posts_per_page' => -1,
	);

	$args = wp_parse_args( $args, $defaults );
	$query = new WP_QUERY( $args );

	return $query;

snippet repeater
	while( have_rows( '${1}' ) ) : the_row();
		echo get_sub_field( '${2}' );
	endwhile;

snippet pr
	echo '<pre>' . print_r(${1}, true) . '</pre>';

snippet ppr
	<?php echo '<pre>' . print_r(${1}, true) . '</pre>'; ?>

snippet d
	echo '<pre>' . print_r(${1}, true) . '</pre>';

snippet pd
	<?php echo '<pre>' . print_r(${1}, true) . '</pre>'; ?>

snippet box
	/* ${1}
	*****************************************************************************/
snippet phpbox
	<?php
	/* ${1}
	*****************************************************************************/
	?>
snippet /
	/* ${1}
	*****************************************************************************/
snippet /p
	<?php
	/* ${1}
	*****************************************************************************/
	?>
snippet p/
	<?php
	/* ${1}
	*****************************************************************************/
	?>
snippet cb
	/* ${1}
	*****************************************************************************/
snippet pcb
	<?php
	/* ${1}
	*****************************************************************************/
	?>
snippet fw
	fwrite( $stdout, ${1} );
snippet e
	echo ${1};${2}
snippet ob
	ob_start();
		include( locate_template( 'template-parts/${1}/${2}' ) );
		$output = ob_get_contents();
	ob_end_clean();
# method
snippet m
	${1:abstract }${2:protected}${3: static} function ${4:foo}(${5:array }${6:$bar})
	{
		${7}
	}
# setter method
snippet sm 
	/**
	 * Sets the value of ${1:foo}
	 *
	 * @param ${2:$1} $$1 ${3:description}
	 *
	 * @return ${4:`Filename()`}
	 */
	${5:public} function set${6:$2}(${7:$2 }$$1)
	{
		$this->${8:$1} = $$1;
		return $this;
	}${9}
# getter method
snippet gm
	/**
	 * Gets the value of ${1:foo}
	 *
	 * @return ${2:$1}
	 */
	${3:public} function get${4:$2}()
	{
		return $this->${5:$1};
	}${6}
#setter
snippet $s
	${1:$foo}->set${2:Bar}(${3});
#getter
snippet $g
	${1:$foo}->get${2:Bar}();

# Tertiary conditional
snippet ?
	$${1:foo} = ${2:true} ? ${3:a} : ${4};
snippet ?:
	${1:true} ? ${2:a} : ${3}

snippet C
	$_COOKIE['${1:variable}']${2}
snippet E
	$_ENV['${1:variable}']${2}
snippet F
	$_FILES['${1:variable}']${2}
snippet G
	$_GET['${1:variable}']${2}
snippet P
	$_POST['${1:variable}']${2}
snippet R
	$_REQUEST['${1:variable}']${2}
snippet S
	$_SERVER['${1:variable}']${2}
snippet SS
	$_SESSION['${1:variable}']${2}
	
# the following are old ones
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @subpackage ${3:default}
	 * @author ${4:`g:snips_author`}
	 */${5}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 */${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 */
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @package ${4:default}
	 * @subpackage ${5:default}
	 * @author ${6:`g:snips_author`}
	 */
	${1:}class ${2:}
	{
		${7}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 */${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 */
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 */${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 */
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 */
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 */
	
# Interface
snippet interface
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 */
	interface ${1:`Filename()`}
	{
		${5}
	}
# class ...
snippet class
	/**
	 * ${1}
	 */
	class ${2:`Filename()`}
	{
		${3}
		/**
		 * ${4}
		 */
		${5:public} function ${6:__construct}(${7:argument})
		{
			${8:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet while
	while ( ${1:/* condition */} ) :
		${2:// code...}
	endwhile;
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if ( ${1:/* condition */} ) :
		${2:// code...}
	endif;
snippet ifil
	<?php if ( ${1:/* condition */} ): ?>
		${2:<!-- code... -->}
	<?php endif; ?>
snippet ife
	if (${1:/* condition */}) :
		${2:// code...} 
	
	else :
		${3:// code...}
	endif;
	${4}
snippet ifeil
	<?php if ( ${1:/* condition */} ): ?>
		${2:<!-- html... -->}
	<?php else: ?>
		${3:<!-- html... -->}
	<?php endif; ?>
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif ( ${1:/* condition */} ) {
		${2:// code...}
	}
snippet switch
	switch ( $${1:variable} ) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ( $${2:i} = 0; $$2 < ${1:count}; $$2${3:++} ) :
		${4: // code...}
	endfor;
snippet foreach
	foreach ( $${1:variable} as $${2:value} ) :
		${3:// code...}
	endforeach;
snippet fe
	foreach ( $${1:variable} as $${2:value} ) :
		${3:// code...}
	endforeach;
snippet foreachil
	<?php foreach ($${1:variable} as $${2:value}): ?>
		${3:<!-- html... -->}
	<?php endforeach; ?>
snippet foreachk
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${4:// code...}
	}
snippet foreachkil
	<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>
		${4:<!-- html... -->}
	<?php endforeach; ?>
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet try
	try {
		${2}
	} catch (${1:Exception} $e) {
	}
# lambda with closure
snippet lambda
	${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {
		${4}
	};
snippet vd
	var_dump(${1});
snippet vdd
	var_dump(${1}); die(${2:});
snippet http_redirect
	header ("HTTP/1.1 301 Moved Permanently"); 
	header ("Location: ".URL); 
	exit();
# Getters & Setters
snippet gs
	/**
	 * Gets the value of ${1:foo}
	 *
	 * @return ${2:$1}
	 */
	public function get${3:$2}()
	{
		return $this->${4:$1};
	}

	/**
	 * Sets the value of $1
	 *
	 * @param $2 $$1 ${5:description}
	 *
	 * @return ${6:`Filename()`}
	 */
	public function set$3(${7:$2 }$$1)
	{
		$this->$4 = $$1;
		return $this;
	}${8}
# anotation, get, and set, useful for doctrine
snippet ags
	/**
	 * ${1:description}
	 * 
	 * @${7}
	 */
	${2:protected} $${3:foo};

	public function get${4:$3}()
	{
		return $this->$3;
	}

	public function set$4(${5:$4 }$${6:$3})
	{
		$this->$3 = $$6;
		return $this;
	}
snippet rett
	return true;
snippet retf
	return false;


#################################
##  HTML SNIPPETS
################################

snippet phpbox
	<?php
	/* ${1}
	*****************************************************************************/
	?>

snippet container
	<div class="container">
		${1}
	</div><!-- end .container -->

snippet row
	<div class="row">
		${1}
	</div><!-- end .row -->	

snippet phpc
	<?php /* ${1} */ ?>

snippet comment
	/* ${1}
	*******************************************************************************/

snippet phpcomment
	<?
	/* ${1}
	*****************************************************************************/
	?>

snippet cp
	apply_filters("debug", "${1}");

snippet php-cp
	<?php apply_filters("debug", "${1}"); ?>

# Non-Breaking Space
snippet nbs
	&nbsp;
# ←
snippet left
	&#x2190;
# →

snippet right
	&#x2192;
# ↑

snippet up
	&#x2191;
# ↓
snippet down
	&#x2193;
# ↩
snippet return
	&#x21A9;
# ⇤
snippet backtab
	&#x21E4;
# ⇥
snippet tab
	&#x21E5;
# ⇧
snippet shift
	&#x21E7;
# ⌃
snippet ctrl
	&#x2303;
# ⌅
snippet enter
	&#x2305;
# ⌘
snippet cmd
	&#x2318;
# ⌥
snippet option
	&#x2325;
# ⌦
snippet delete
	&#x2326;
# ⌫
snippet backspace
	&#x232B;
# ⎋
snippet esc
	&#x238B;
# Generic Doctype
snippet doctype HTML 4.01 Strict
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
snippet doctype HTML 4.01 Transitional
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
snippet doctype HTML 5
	<!DOCTYPE HTML>
snippet doctype XHTML 1.0 Frameset
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
snippet doctype XHTML 1.0 Strict
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
snippet doctype XHTML 1.0 Transitional
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
snippet doctype XHTML 1.1
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
# HTML Doctype 4.01 Strict
snippet docts
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
# HTML Doctype 4.01 Transitional
snippet doct
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
# HTML Doctype 5
snippet doct5
	<!DOCTYPE HTML>
# XHTML Doctype 1.0 Frameset
snippet docxf
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
# XHTML Doctype 1.0 Strict
snippet docxs
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
# XHTML Doctype 1.0 Transitional
snippet docxt
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
# XHTML Doctype 1.1
snippet docx
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
# Attributes
snippet attr
	${1:attribute}="${2:property}"
snippet attr+
	${1:attribute}="${2:property}" attr+${3}
snippet .
	class="${1}"${2}
snippet #
	id="${1}"${2}
snippet alt
	alt="${1}"${2}
snippet charset
	charset="${1:utf-8}"${2}
snippet data
	data-${1}="${2:$1}"${3}
	for="${1}"${2}
snippet height
	height="${1}"${2}
snippet href
	href="${1:#}"${2}
snippet lang
	lang="${1:en}"${2}
snippet media
	media="${1}"${2}
snippet name
	name="${1}"${2}
snippet rel
	rel="${1}"${2}
snippet scope
	scope="${1:row}"${2}
snippet src
	src="${1}"${2}
snippet title=
	title="${1}"${2}
snippet type
	type="${1}"${2}
snippet value
	value="${1}"${2}
snippet width
	width="${1}"${2}
# Elements
snippet a
	<a href="${1}">${2}</a>
snippet a.
	<a class="${1}" href="${2:#}">${3:$1}</a>
snippet a#
	<a id="${1}" href="${2:#}">${3:$1}</a>
snippet a:ext
	<a href="http://${1:example.com}">${2:$1}</a>
snippet a:mail
	<a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${3:email me}</a>
snippet abbr
	<abbr title="${1}">${2}</abbr>
snippet address
	<address>
		${1}
	</address>
snippet area
	<area shape="${1:rect}" coords="${2}" href="${3}" alt="${4}" />
snippet area+
	<area shape="${1:rect}" coords="${2}" href="${3}" alt="${4}" />
	area+${5}
snippet area:c
	<area shape="circle" coords="${1}" href="${2}" alt="${3}" />
snippet area:d
	<area shape="default" coords="${1}" href="${2}" alt="${3}" />
snippet area:p
	<area shape="poly" coords="${1}" href="${2}" alt="${3}" />
snippet area:r
	<area shape="rect" coords="${1}" href="${2}" alt="${3}" />
snippet article
	<article>
		${1}
	</article>
snippet article.
	<article class="${1}">
		${2}
	</article>
snippet article#
	<article id="${1}">
		${2}
	</article>
snippet aside
	<aside>
		${1}
	</aside>
snippet aside.
	<aside class="${1}">
		${2}
	</aside>
snippet aside#
	<aside id="${1}">
		${2}
	</aside>
snippet audio
	<audio src="${1}>${2}</audio>
snippet b
	<b>${1}</b>
snippet base
	<base href="${1}" target="${2}" />
snippet bdi
	<bdi>${1}</bdo>
snippet bdo
	<bdo dir="${1}">${2}</bdo>
snippet bdo:l
	<bdo dir="ltr">${1}</bdo>
snippet bdo:r
	<bdo dir="rtl">${1}</bdo>
snippet blockquote
	<blockquote>
		${1}
	</blockquote>
snippet body
	<body>
		${1}
	</body>
snippet br
	<br />${1}
snippet button
	<button type="${1:submit}">${2}</button>
snippet button.
	<button class="${1:button}" type="${2:submit}">${3}</button>
snippet button#
	<button id="${1}" type="${2:submit}">${3}</button>
snippet button:s
	<button type="submit">${1}</button>
snippet button:r
	<button type="reset">${1}</button>
snippet canvas
	<canvas>
		${1}
	</canvas>
snippet caption
	<caption>${1}</caption>
snippet cite
	<cite>${1}</cite>
snippet code
	<code>${1}</code>
snippet col
	<col />${1}
snippet col+
	<col />
	col+${1}
snippet colgroup
	<colgroup>
		${1}
	</colgroup>
snippet colgroup+
	<colgroup>
		<col />
		col+${1}
	</colgroup>
snippet command
	<command type="command" label="${1}" icon="${2}" />
snippet command:c
	<command type="checkbox" label="${1}" icon="${2}" />
snippet command:r
	<command type="radio" radiogroup="${1}" label="${2}" icon="${3}" />
snippet datagrid
	<datagrid>
		${1}
	</datagrid>
snippet datalist
	<datalist>
		${1}
	</datalist>
snippet datatemplate
	<datatemplate>
		${1}
	</datatemplate>
snippet dd
	<dd>${1}</dd>
snippet dd.
	<dd class="${1}">${2}</dd>
snippet dd#
	<dd id="${1}">${2}</dd>
snippet del
	<del>${1}</del>
snippet details
	<details>${1}</details>
snippet dfn
	<dfn>${1}</dfn>
snippet dialog
	<dialog>
		${1}
	</dialog>
snippet div.
	<div class="${1}">
		${2}
	</div>
snippet div#
	<div id="${1}">
		${2}
	</div>
snippet dl
	<dl>
		${1}
	</dl>
snippet dl.
	<dl class="${1}">
		${2}
	</dl>
snippet dl#
	<dl id="${1}">
		${2}
	</dl>
snippet dl+
	<dl>
		<dt>${1}</dt>
		<dd>${2}</dd>
		dt+${3}
	</dl>
snippet dt
	<dt>${1}</dt>
snippet dt.
	<dt class="${1}">${2}</dt>
snippet dt#
	<dt id="${1}">${2}</dt>
snippet dt+
	<dt>${1}</dt>
	<dd>${2}</dd>
	dt+${3}
snippet em
	<em>${1}</em>
snippet embed
	<embed src=${1} type="${2} />
snippet fieldset
	<fieldset>
		${1}
	</fieldset>
snippet fieldset.
	<fieldset class="${1}">
		${2}
	</fieldset>
snippet fieldset#
	<fieldset id="${1}">
		${2}
	</fieldset>
snippet fieldset+
	<fieldset>
		<legend><span>${1}</span></legend>
		${2}
	</fieldset>
	fieldset+${3}
snippet figcaption
	<figcaption>${1}</figcaption>
snippet figure
	<figure>${1}</figure>
snippet footer
	<footer>
		${1}
	</footer>
snippet footer.
	<footer class="${1}">
		${2}
	</footer>
snippet footer#
	<footer id="${1}">
		${2}
	</footer>
snippet form
	<form action="${1}" method="${2:get}" accept-charset="utf-8">
		${3}
	</form>
snippet form.
	<form class="${1}" action="${2}" method="${3:get}" accept-charset="utf-8">
		${4}
	</form>
snippet form#
	<form id="${1}" action="${2}" method="${3:get}" accept-charset="utf-8">
		${4}
	</form>
snippet h1
	<h1>${1}</h1>
snippet h1.
	<h1 class="${1}">${2}</h1>
snippet h1#
	<h1 id="${1}">${2}</h1>
snippet h2
	<h2>${1}</h2>
snippet h2.
	<h2 class="${1}">${2}</h2>
snippet h2#
	<h2 id="${1}">${2}</h2>
snippet h3
	<h3>${1}</h3>
snippet h3.
	<h3 class="${1}">${2}</h3>
snippet h3#
	<h3 id="${1}">${2}</h3>
snippet h4
	<h4>${1}</h4>
snippet h4.
	<h4 class="${1}">${2}</h4>
snippet h4#
	<h4 id="${1}">${2}</h4>
snippet h5
	<h5>${1}</h5>
snippet h5.
	<h5 class="${1}">${2}</h5>
snippet h5#
	<h5 id="${1}">${2}</h5>
snippet h6
	<h6>${1}</h6>
snippet h6.
	<h6 class="${1}">${2}</h6>
snippet h6#
	<h6 id="${1}">${2}</h6>
snippet head
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />

		<title>${1:`substitute(Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
		${2}
	</head>
snippet header
	<header>
		${1}
	</header>
snippet header.
	<header class="${1}">
		${2}
	</header>
snippet header#
	<header id="${1}">
		${2}
	</header>
snippet hgroup
	<hgroup>
		${1}
	</hgroup>
snippet hgroup.
	<hgroup class="${1}>
		${2}
	</hgroup>
snippet hr
	<hr />${1}
snippet html
	<html>
	${1}
	</html>
snippet xhtml
	<html xmlns="http://www.w3.org/1999/xhtml">
	${1}
	</html>
snippet i
	<i>${1}</i>
snippet iframe
	<iframe src="${1}" frameborder="0"></iframe>${2}
snippet iframe.
	<iframe class="${1}" src="${2}" frameborder="0"></iframe>${3}
snippet iframe#
	<iframe id="${1}" src="${2}" frameborder="0"></iframe>${3}
snippet img
	<img src="${1}" alt="${2}" />${3}
snippet img.
	<img class="${1}" src="${2}" alt="${3}" />${4}
snippet img#
	<img id="${1}" src="${2}" alt="${3}" />${4}
snippet input
	<input type="${1:text/submit/hidden/button/image}" name="${2}" id="${3:$2}" value="${4}" />${5}
snippet input.
	<input class="${1}" type="${2:text/submit/hidden/button/image}" name="${3}" id="${4:$3}" value="${5}" />${6}
snippet input:text
	<input type="text" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:submit
	<input type="submit" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:hidden
	<input type="hidden" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:button
	<input type="button" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:image
	<input type="image" name="${1}" id="${2:$1}" src="${3}" alt="${4}" />${5}
snippet input:checkbox
	<input type="checkbox" name="${1}" id="${2:$1}" />${3}
snippet input:radio
	<input type="radio" name="${1}" id="${2:$1}" />${3}
snippet input:color
	<input type="color" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:date
	<input type="date" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:datetime
	<input type="datetime" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:datetime-local
	<input type="datetime-local" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:email
	<input type="email" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:file
	<input type="file" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:month
	<input type="month" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:number
	<input type="number" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:password
	<input type="password" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:range
	<input type="range" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:reset
	<input type="reset" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:search
	<input type="search" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:time
	<input type="time" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:url
	<input type="url" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet input:week
	<input type="week" name="${1}" id="${2:$1}" value="${3}" />${4}
snippet ins
	<ins>${1}</ins>
snippet kbd
	<kbd>${1}</kbd>
snippet keygen
	<keygen>${1}</keygen>
snippet label
	<label for="${2:$1}">${1}</label>
snippet label:i
	<label for="${2:$1}">${1}</label>
	<input type="${3:text/submit/hidden/button}" name="${4:$2}" id="${5:$2}" value="${6}" />${7}
snippet label:s
	<label for="${2:$1}">${1}</label>
	<select name="${3:$2}" id="${4:$2}">
		<option value="${5}">${6:$5}</option>
	</select>
snippet legend
	<legend>${1}</legend>
snippet legend+
	<legend><span>${1}</span></legend>
snippet li
	<li>${1}</li>
snippet li.
	<li class="${1}">${2}</li>
snippet li+
	<li>${1}</li>
	li+${2}
snippet lia
	<li><a href="${2:#}">${1}</a></li>
snippet lia+
	<li><a href="${2:#}">${1}</a></li>
	lia+${3}
snippet link
	<link rel="${1}" href="${2}" title="${3}" type="${4}" />${5}
snippet link:atom
	<link rel="alternate" href="${1:atom.xml}" title="Atom" type="application/atom+xml" />${2}
snippet link:css
	<link rel="stylesheet" href="${2:style.css}" type="text/css" media="${3:all}" />${4}
snippet link:favicon
	<link rel="shortcut icon" href="${1:favicon.ico}" type="image/x-icon" />${2}
snippet link:rss
	<link rel="alternate" href="${1:rss.xml}" title="RSS" type="application/atom+xml" />${2}
snippet link:touch
	<link rel="apple-touch-icon" href="${1:favicon.png}" />${2}
snippet map
	<map name="${1}">
		${2}
	</map>
snippet map.
	<map class="${1}" name="${2}">
		${3}
	</map>
snippet map#
	<map name="${1}" id="${2:$1}>
		${3}
	</map>
snippet map+
	<map name="${1}">
		<area shape="${2}" coords="${3}" href="${4}" alt="${5}" />${6}
	</map>${7}
snippet mark
	<mark>${1}</mark>
snippet menu
	<menu>
		${1}
	</menu>
snippet menu:c
	<menu type="context">
		${1}
	</menu>
snippet menu:t
	<menu type="toolbar">
		${1}
	</menu>
snippet meta
	<meta http-equiv="${1}" content="${2}" />${3}
snippet meta:compat
	<meta http-equiv="X-UA-Compatible" content="IE=${1:7,8,edge}" />${3}
snippet meta:refresh
	<meta http-equiv="refresh" content="text/html;charset=UTF-8" />${3}
snippet meta:utf
	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />${3}
snippet meter
	<meter>${1}</meter>
snippet nav
	<nav>
		${1}
	</nav>
snippet nav.
	<nav class="${1}">
		${2}
	</nav>
snippet nav#
	<nav id="${1}">
		${2}
	</nav>
snippet noscript
	<noscript>
		${1}
	</noscript>
snippet object
	<object data="${1}" type="${2}">
		${3}
	</object>${4}
# Embed QT Movie
snippet movie
	<object width="$2" height="$3" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"
	 codebase="http://www.apple.com/qtactivex/qtplugin.cab">
		<param name="src" value="$1" />
		<param name="controller" value="$4" />
		<param name="autoplay" value="$5" />
		<embed src="${1:movie.mov}"
			width="${2:320}" height="${3:240}"
			controller="${4:true}" autoplay="${5:true}"
			scale="tofit" cache="true"
			pluginspage="http://www.apple.com/quicktime/download/" />
	</object>${6}
snippet ol
	<ol>
		${1}
	</ol>
snippet ol.
	<ol class="${1}>
		${2}
	</ol>
snippet ol#
	<ol id="${1}>
		${2}
	</ol>
snippet ol+
	<ol>
		<li>${1}</li>
		li+${2}
	</ol>
snippet opt
	<option value="${1}">${2:$1}</option>
snippet opt+
	<option value="${1}">${2:$1}</option>
	opt+${3}
snippet optt
	<option>${1}</option>
snippet optgroup
	<optgroup>
		<option value="${1}">${2:$1}</option>
		opt+${3}
	</optgroup>
snippet output
	<output>${1}</output>
snippet p
	<p>${1}</p>
snippet param
	<param name="${1}" value="${2}" />${3}
snippet pre
	<pre>
		${1}
	</pre>
snippet progress
	<progress>${1}</progress>
snippet q
	<q>${1}</q>
snippet rp
	<rp>${1}</rp>
snippet rt
	<rt>${1}</rt>
snippet ruby
	<ruby>
		<rp><rt>${1}</rt></rp>
	</ruby>
snippet s
	<s>${1}</s>
snippet samp
	<samp>
		${1}
	</samp>
snippet script
	<script type="text/javascript" charset="utf-8">
		${1}
	</script>
snippet scriptsrc
	<script src="${1}.js" type="text/javascript" charset="utf-8"></script>
snippet section
	<section class="${1}">
		${2}
	</section>
snippet section.
	<section class="${1}">
		${2}
	</section>
snippet section#
	<section id="${1}">
		${2}
	</section>
snippet select
	<select name="${1}" id="${2:$1}">
		${3}
	</select>
snippet select.
	<select name="${1}" id="${2:$1}" class="${3}>
		${4}
	</select>
snippet select+
	<select name="${1}" id="${2:$1}">
		<option value="${3}">${4:$3}</option>
		opt+${5}
	</select>
snippet small
	<small>${1}</small>
snippet source
	<source src="${1}" type="${2}" media="${3}" />
snippet strong
	<strong>${1}</strong>
snippet style
	<style type="text/css" media="${1:all}">
		${2}
	</style>
snippet sub
	<sub>${1}</sub>
snippet summary
	<summary>
		${1}
	</summary>
snippet sup
	<sup>${1}</sup>
snippet table
	<table>
		${2}
	</table>
snippet table.
	<table class="${1}">
		${3}
	</table>
snippet table#
	<table id="${1}" border="${2:0}">
		${3}
	</table>
snippet tbody
	<tbody>
		${1}
	</tbody>
snippet td
	<td>${1}</td>
snippet td.
	<td class="${1}">${2}</td>
snippet td#
	<td id="${1}">${2}</td>
snippet td+
	<td>${1}</td>
	td+${2}
snippet textarea
	<textarea name="${1}" id=${2:$1} rows="${3:8}" cols="${4:40}">${5}</textarea>${6}
snippet tfoot
	<tfoot>
		${1}
	</tfoot>
snippet th
	<th>${1}</th>
snippet th.
	<th class="${1}">${2}</th>
snippet th#
	<th id="${1}">${2}</th>
snippet th+
	<th>${1}</th>
	th+${2}
snippet thead
	<thead>
		${1}
	</thead>
snippet time
	<time datetime="${1}" pubdate="${2:$1}>${3:$1}</time>
snippet title
	<title>${1:`substitute(Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
snippet tr
	<tr>
		${1}
	</tr>
snippet tr+
	<tr>
		<td>${1}</td>
		td+${2}
	</tr>
snippet track
	<track src="${1}" srclang="${2}" label="${3}" default="${4:default}>${5}</track>${6}
snippet ul
	<ul>
		${1}
	</ul>
snippet ul.
	<ul class="${1}">
		${2}
	</ul>
snippet ul#
	<ul id="${1}">
		${2}
	</ul>
snippet ul+
	<ul>
		<li>${1}</li>
		li+${2}
	</ul>
snippet var
	<var>${1}</var>
snippet video
	<video src="${1} height="${2}" width="${3}" preload="${5:none}" autoplay="${6:autoplay}>${7}</video>${8}
snippet wbr
	<wbr />${1}
