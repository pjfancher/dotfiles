priority -50

global !p
import vim

# Set g:ultisnips_php_scalar_types to 1 if you'd like to enable PHP 7's scalar types for return values
def isPHPScalarTypesEnabled():
    isEnabled = vim.eval("get(g:, 'ultisnips_php_scalar_types', 0)") == "1"
    return isEnabled or re.match('<\?php\s+declare\(strict_types=[01]\);', '\n'.join(vim.current.window.buffer))
endglobal

## Snippets from SnipMate, taken from
## https://github.com/scrooloose/snipmate-snippets.git

snippet gm "PHP Class Getter" b
/**
 * Getter for $1
 *
 * @return ${2:string}
 */
public function get${1/\w+\s*/\u$0/}()`!p snip.rv = ': '+t[2] if isPHPScalarTypesEnabled() else ''`
{
	return $this->$1;
}
endsnippet

snippet ql "query loop"
while ( $$1_query->have_posts() ) : $$1_query->the_post(); 
	$2
endwhile; wp_reset_postdata();
endsnippet

snippet pql
<?php while ( $$1_query->have_posts() ) : $$1_query->the_post(); ?>
	$2
<?php endwhile; wp_reset_postdata(); ?>
endsnippet

snippet usort "usort"
usort( $$1, function( $a, $b  ) {
	return $a->$2 < $b->$2;
});
endsnippet

snippet susort "usort using a string"
usort( $$1, function( $a, $b  ) {
	return strcmp( $a->$2, $b->$2);
});
endsnippet

snippet div "<div>"
<div class="$1">
	$2
</div><!-- end .$1 -->
endsnippet

snippet . "."
<div class="$1">
	$2
</div><!-- end .$1 -->
endsnippet

snippet col "col"
<div class="col-$1">
	$2
</div><!-- end .col-$1 -->
endsnippet

snippet span "<span>"
<span class="$1">$2</span>
endsnippet

snippet sprite "sprite icon"
<span class="icon s-icon-$1"></span>
endsnippet

snippet img "<img>" 
<img src="<?php echo get_stylesheet_directory_uri(); ?>/public/images/$1" alt="$2" title="$2" />$3
endsnippet

snippet cf "cf_the_img"
<?php cf_the_img(['width' => $1, 'height' => $2, 'alt' => $3]); ?>
endsnippet

snippet cfp "cf_the_img with post id"
<?php cf_the_img(['post' => $1, 'width' => $2, 'height' => $3, 'alt' => $4]); ?>
endsnippet

snippet cfi "cf_the_img with image attr"
<?php cf_the_img(['image' => '$1', 'width' => $2, 'height' => $3, 'alt' => $4]); ?>
endsnippet

snippet cfe "cf_the_img with external image URL"
<?php cf_the_img(['image' => $1, 'width' => $2, 'height' => $3, 'alt' => $4, 'use_public_dir' => false]); ?>
endsnippet

snippet cfa "cf_the_img with get_field"
<?php cf_the_img(['attach' => get_field( '$1', '$2' ), 'width' => $3, 'height' => $4, 'alt' => $5]); ?>
endsnippet

snippet cfv "cf_the_img replacing get_avatar"
<?php 
$avatars = get_user_meta($author->ID, 'simple_local_avatar', true);
cf_the_img(['image' => $avatars['full'], 'width' => $1, 'height' => $1, 'alt' => $author->display_name, 'use_public_dir' => false]);
?>
endsnippet
